import os
import webbrowser
from PyQt6.QtWidgets import (QWidget, QVBoxLayout, QPushButton, QLabel,
                             QHBoxLayout, QMessageBox)
from PyQt6.QtGui import QIcon
from PyQt6.QtCore import Qt, QSize
from utils.json_utils import load_json, save_json


class BrowserMenu(QWidget):
    def __init__(self, switch_to, is_admin=False):
        super().__init__()
        self.switch_to = switch_to
        self.is_admin = is_admin  # –§–ª–∞–≥ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
        self.sites_file = "data/sites.json"  # –ü—É—Ç—å –∫ JSON —Ñ–∞–π–ª—É —Å —Å–∞–π—Ç–∞–º–∏
        self.init_ui()
        self.setup_styles()
        self.load_sites()

    def init_ui(self):
        """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞"""
        self.layout = QVBoxLayout()
        self.layout.setSpacing(15)
        self.layout.setContentsMargins(30, 30, 30, 30)

        # –ó–∞–≥–æ–ª–æ–≤–æ–∫
        self.title = QLabel("–ë—Ä–∞—É–∑–µ—Ä –∏ —Å–∞–π—Ç—ã")
        self.title.setAlignment(Qt.AlignmentFlag.AlignCenter)
        self.layout.addWidget(self.title)

        # –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è —Å–ø–∏—Å–∫–∞ —Å–∞–π—Ç–æ–≤
        self.sites_container = QWidget()
        self.sites_layout = QVBoxLayout()
        self.sites_container.setLayout(self.sites_layout)
        self.layout.addWidget(self.sites_container)

        # –ö–Ω–æ–ø–∫–∞ "–ù–∞–∑–∞–¥"
        self.back_btn = QPushButton("–ù–∞–∑–∞–¥")
        self.back_btn.clicked.connect(lambda: self.switch_to("main"))
        self.layout.addWidget(self.back_btn)

        # –ö–Ω–æ–ø–∫–∞ "–î–æ–±–∞–≤–∏—Ç—å —Å–∞–π—Ç" (—Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∞)
        if self.is_admin:
            self.add_btn = QPushButton("–î–æ–±–∞–≤–∏—Ç—å —Å–∞–π—Ç")
            self.add_btn.clicked.connect(self.add_site_dialog)
            self.layout.addWidget(self.add_btn)

        self.setLayout(self.layout)

    def setup_styles(self):
        """–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —Å—Ç–∏–ª–∏ –¥–ª—è –≤—Å–µ—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤"""
        self.setStyleSheet("""
            QWidget {
                background-color: rgba(40, 40, 40, 0.8);
            }
        """)

        self.title.setStyleSheet("""
            QLabel {
                color: #ffffff;
                font-size: 24px;
                font-weight: bold;
                padding: 10px;
            }
        """)

        self.button_style = """
            QPushButton {
                background-color: rgba(70, 130, 180, 0.85);
                color: white;
                font-size: 16px;
                padding: 12px;
                border-radius: 6px;
                border: 1px solid #4682B4;
                text-align: left;
                padding-left: 15px;
            }
            QPushButton:hover {
                background-color: rgba(90, 150, 200, 0.9);
            }
        """

        self.back_btn.setStyleSheet("""
            QPushButton {
                background-color: rgba(180, 70, 70, 0.85);
                color: white;
                font-size: 16px;
                padding: 12px;
                border-radius: 6px;
                border: 1px solid #B22222;
                margin-top: 20px;
            }
            QPushButton:hover {
                background-color: rgba(200, 90, 90, 0.9);
            }
        """)

        if hasattr(self, 'add_btn'):
            self.add_btn.setStyleSheet("""
                QPushButton {
                    background-color: rgba(100, 180, 100, 0.85);
                    color: white;
                    font-size: 16px;
                    padding: 12px;
                    border-radius: 6px;
                    border: 1px solid #64B464;
                    margin-top: 10px;
                }
                QPushButton:hover {
                    background-color: rgba(120, 200, 120, 0.9);
                }
            """)

    def load_sites(self):
        """–ó–∞–≥—Ä—É–∑–∫–∞ —Å–∞–π—Ç–æ–≤ –∏–∑ JSON —Ñ–∞–π–ª–∞"""
        sites = load_json(self.sites_file) or []

        # –û—á–∏—â–∞–µ–º —Ç–µ–∫—É—â–∏–π —Å–ø–∏—Å–æ–∫
        for i in reversed(range(self.sites_layout.count())):
            item = self.sites_layout.itemAt(i)
            if item.widget():
                item.widget().deleteLater()

        # –î–æ–±–∞–≤–ª—è–µ–º —Å–∞–π—Ç—ã
        if not sites:
            self.show_info_message("–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è", "–°–ø–∏—Å–æ–∫ —Å–∞–π—Ç–æ–≤ –ø—É—Å—Ç!")
        for site in sites:
            self.add_site_button(site)

    def add_site_button(self, site):
        """–î–æ–±–∞–≤–ª—è–µ—Ç –∫–Ω–æ–ø–∫—É —Å–∞–π—Ç–∞ –≤ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å"""
        btn_layout = QHBoxLayout()

        # –û—Å–Ω–æ–≤–Ω–∞—è –∫–Ω–æ–ø–∫–∞ —Å–∞–π—Ç–∞
        site_btn = QPushButton(site.get("name", "–ë–µ–∑ –∏–º–µ–Ω–∏"))
        site_btn.setStyleSheet(self.button_style)

        if site.get("icon_path") and os.path.exists(site["icon_path"]):
            site_btn.setIcon(QIcon(site["icon_path"]))
            site_btn.setIconSize(QSize(32, 32))

        site_btn.clicked.connect(lambda _, u=site.get("url", ""): self.open_site(u))
        btn_layout.addWidget(site_btn, stretch=1)

        # –ö–Ω–æ–ø–∫–∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è (—Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∞)
        if self.is_admin:
            edit_btn = QPushButton("‚úè")
            edit_btn.setToolTip("–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å")
            edit_btn.clicked.connect(lambda: self.edit_site(site))
            btn_layout.addWidget(edit_btn)

            delete_btn = QPushButton("üóë")
            delete_btn.setToolTip("–£–¥–∞–ª–∏—Ç—å")
            delete_btn.clicked.connect(lambda: self.delete_site(site))
            btn_layout.addWidget(delete_btn)

        self.sites_layout.addLayout(btn_layout)

    def open_site(self, url):
        """–û—Ç–∫—Ä—ã–≤–∞–µ—Ç —Å–∞–π—Ç –≤ –±—Ä–∞—É–∑–µ—Ä–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é"""
        if not url:
            self.show_error_message("–û—à–∏–±–∫–∞", "URL –Ω–µ —É–∫–∞–∑–∞–Ω!")
            return
        try:
            webbrowser.open(url)
        except Exception as e:
            self.show_error_message("–û—à–∏–±–∫–∞", f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–∫—Ä—ã—Ç—å —Å–∞–π—Ç:\n{str(e)}")

    def add_site_dialog(self):
        """–î–∏–∞–ª–æ–≥ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –Ω–æ–≤–æ–≥–æ —Å–∞–π—Ç–∞"""
        sites = load_json(self.sites_file) or []
        new_site = {"id": len(sites) + 1, "name": "–ù–æ–≤—ã–π —Å–∞–π—Ç", "url": "", "icon_path": ""}
        sites.append(new_site)
        save_json(self.sites_file, sites)
        self.load_sites()

    def edit_site(self, site):
        """–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ —Å–∞–π—Ç–∞ (–∑–∞–≥–ª—É—à–∫–∞)"""
        self.show_info_message("–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ", f"–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∞–π—Ç–∞: {site['name']}")

    def delete_site(self, site):
        """–£–¥–∞–ª–µ–Ω–∏–µ —Å–∞–π—Ç–∞"""
        reply = QMessageBox.question(
            self, '–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ',
            f'–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å —Å–∞–π—Ç: {site.get('name', '–ë–µ–∑ –∏–º–µ–Ω–∏')}?',
            QMessageBox.StandardButton.Yes | QMessageBox.StandardButton.No
        )

        if reply == QMessageBox.StandardButton.Yes:
            sites = load_json(self.sites_file) or []
            sites = [s for s in sites if s["id"] != site["id"]]
            save_json(self.sites_file, sites)
            self.load_sites()

    def show_error_message(self, title, message):
        """–ü–æ–∫–∞–∑–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ"""
        msg = QMessageBox(self)
        msg.setIcon(QMessageBox.Icon.Critical)
        msg.setWindowTitle(title)
        msg.setText(message)
        msg.exec()

    def show_info_message(self, title, message):
        """–ü–æ–∫–∞–∑–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ"""
        msg = QMessageBox(self)
        msg.setIcon(QMessageBox.Icon.Information)
        msg.setWindowTitle(title)
        msg.setText(message)
        msg.exec()